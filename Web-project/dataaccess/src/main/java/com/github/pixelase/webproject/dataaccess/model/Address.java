package com.github.pixelase.webproject.dataaccess.model;
// Generated 02.12.2015 21:41:29 by Hibernate Tools 4.3.1.Final

import org.springframework.data.domain.Persistable;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address")
public class Address implements Persistable<Integer> {

    private static final long serialVersionUID = 1L;
    private Integer id;
    private String street;
    private String house;
    private String apartment;
    private Set<Tenant> tenants = new HashSet<>(0);

    public Address() {
        super();
    }

    public Address(Integer id) {
        super();
        this.id = id;
    }

    public Address(String street, String house, String apartment) {
        super();
        this.street = street;
        this.house = house;
        this.apartment = apartment;
    }

    public Address(Integer id, String street, String house, String apartment) {
        super();
        this.id = id;
        this.street = street;
        this.house = house;
        this.apartment = apartment;
    }

    @Id
    @GeneratedValue
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "street")
    public String getStreet() {
        return this.street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    @Column(name = "house")
    public String getHouse() {
        return this.house;
    }

    public void setHouse(String house) {
        this.house = house;
    }

    @Column(name = "apartment")
    public String getApartment() {
        return this.apartment;
    }

    public void setApartment(String apartment) {
        this.apartment = apartment;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set<Tenant> getTenants() {
        return this.tenants;
    }

    public void setTenants(Set<Tenant> tenants) {
        this.tenants = tenants;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof Address))
            return false;
        Address other = (Address) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        } else if (!id.equals(other.id))
            return false;
        return true;
    }

    @Override
    public String toString() {
        return "Address [id=" + id + ", street=" + street + ", house=" + house + ", apartment=" + apartment + "]";
    }

    @Override
    @Transient
    public boolean isNew() {
        return id == null;
    }

}
