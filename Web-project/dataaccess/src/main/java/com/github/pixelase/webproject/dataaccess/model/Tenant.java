package com.github.pixelase.webproject.dataaccess.model;
// Generated 02.12.2015 21:41:29 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.data.domain.Persistable;

/**
 * Tenant generated by hbm2java
 */
@Entity
@Table(name = "tenant")
public class Tenant implements Persistable<Integer> {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private Address address;
	private String firstName;
	private String lastName;
	private Set<WorkRequest> workRequests = new HashSet<WorkRequest>(0);

	public Tenant() {
		super();
	}

	public Tenant(Integer id) {
		super();
		this.id = id;
	}

	public Tenant(Address address, String firstName, String lastName) {
		super();
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
	}

	public Tenant(Integer id, Address address, String firstName, String lastName) {
		super();
		this.id = id;
		this.address = address;
		this.firstName = firstName;
		this.lastName = lastName;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "first_name")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tenant")
	public Set<WorkRequest> getWorkRequests() {
		return this.workRequests;
	}

	public void setWorkRequests(Set<WorkRequest> workRequests) {
		this.workRequests = workRequests;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Tenant))
			return false;
		Tenant other = (Tenant) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Tenant [id=" + id + ", address=" + address + ", firstName=" + firstName + ", lastName=" + lastName
				+ "]";
	}

	@Override
	@Transient
	public boolean isNew() {
		return id == null;
	}

}
