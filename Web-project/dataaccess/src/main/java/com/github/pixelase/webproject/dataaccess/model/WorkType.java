package com.github.pixelase.webproject.dataaccess.model;
// Generated 02.12.2015 21:41:29 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.data.domain.Persistable;

/**
 * WorkType generated by hbm2java
 */
@Entity
@Table(name = "work_type")
public class WorkType implements Persistable<Integer> {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String name;
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<WorkRequest> workRequests = new HashSet<WorkRequest>(0);

	public WorkType() {
		super();
	}

	public WorkType(Integer id) {
		super();
		this.id = id;
	}

	public WorkType(String name) {
		super();
		this.name = name;
	}

	public WorkType(Integer id, String name) {
		super();
		this.id = id;
		this.name = name;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workType")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workType")
	public Set<WorkRequest> getWorkRequests() {
		return this.workRequests;
	}

	public void setWorkRequests(Set<WorkRequest> workRequests) {
		this.workRequests = workRequests;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof WorkType))
			return false;
		WorkType other = (WorkType) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "WorkType [id=" + id + ", name=" + name + "]";
	}

	@Override
	@Transient
	public boolean isNew() {
		return id == null;
	}

}
